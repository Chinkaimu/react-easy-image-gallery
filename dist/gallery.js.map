{"version":3,"sources":["../src/gallery.js"],"names":[],"mappings":"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","file":"gallery.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst ImgList = styled.div`\n  overflow: hidden;\n`;\n\nconst ImgWrapper = styled.div`\n  display: inline-block;\n  vertical-align: top;\n  margin: 5px;\n  box-sizing: border-box;\n  overflow: hidden;\n  background: ${props => props.bgColor};\n`;\n\nconst Img = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport default class Gallery extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n    this.updateOnResize = this.updateOnResize.bind(this);\n\n    this.debouncedResize = debounce(this.updateOnResize, 100);\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.debouncedResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.debouncedResize);\n  }\n\n  updateOnResize() {\n    if (this.isAspectRatioSame()) {\n      return;\n    }\n\n    if (this.timeout) {\n      window.cancelAnimationFrame(this.timeout);\n    }\n\n    this.timeout = window.requestAnimationFrame(() => {\n      this.forceUpdate();\n    });\n  }\n\n  isAspectRatioSame() {\n    if (this.myRef.current) {\n      return this.rowTotalAspectRatio === this.myRef.current.clientWidth / this.props.columnWidth;\n    }\n  }\n\n  scrollbarIsAboutToAppear() {\n    const { images } = this.props;\n    const scrollbarIsHidden = window.innerWidth === document.body.clientWidth;\n\n    if (scrollbarIsHidden) {\n      const totalHeight = images.reduce((a, b) => { return a + b.height }, 0);\n      if (totalHeight > window.innerHeight - this.myRef.current.offsetTop) {\n        return true;\n      }\n    }\n  }\n\n  renderImages() {\n    const { images, columnWidth } = this.props;\n    \n    let containerWidth = this.myRef.current.clientWidth;\n\n    if (this.scrollbarIsAboutToAppear(images, this.myRef)) {\n      containerWidth -= getScrollbarWidth();\n    }\n\n    this.rowTotalAspectRatio = containerWidth / columnWidth;\n    const result = [];\n    let currentRow = [];\n    let currentRowAspectRatio = 0;\n\n    for (let i = 0; i < images.length; i++) {\n      const image = images[i];\n      const aspectRatio = image.width / image.height;\n\n      currentRowAspectRatio += aspectRatio;\n      currentRow.push([\n        <ImgWrapper key={i} bgColor={this.props.imageLoadingColor}>\n          <Img src={image.src} />\n        </ImgWrapper>,\n        aspectRatio\n      ]);\n      if (currentRowAspectRatio > this.rowTotalAspectRatio || images[i + 1] === undefined) {\n        const rowAspectRatio = currentRowAspectRatio > this.rowTotalAspectRatio ? currentRowAspectRatio : this.rowTotalAspectRatio;\n\n        for (let j = 0; j < currentRow.length; j++) {\n          const Element = currentRow[j][0];\n          const aspectRatio = currentRow[j][1];\n          const workingWidth = containerWidth - (10 * currentRow.length);\n          const width = (aspectRatio * workingWidth / rowAspectRatio);\n          const height = width / aspectRatio;\n          result.push(\n            React.cloneElement(\n              Element, \n              { style: { width, height } }\n            )\n          );\n        }\n\n        currentRowAspectRatio = 0;\n        currentRow = [];\n      }\n    }\n    return result;\n  }\n\n  render() {\n    return (\n      <ImgList ref={this.myRef}>\n        { this.myRef.current && this.renderImages() }\n      </ImgList>\n    );\n  }\n}\n\nGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string.isRequired,\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired\n    })\n  ).isRequired,\n  columnWidth: PropTypes.number,\n  imageLoadingColor: PropTypes.string\n};\n\nGallery.defaultProps = {\n  columnWidth: 250,\n  imageLoadingColor: '#f3f3f3'\n};\n\nfunction getScrollbarWidth() {\n  return 17;\n}\n\nfunction debounce(fn, ms) {\n  let debounceTimeout;\n  let timeSinceLastCalledFn;\n\n  return (...args) => {\n    if (debounceTimeout) {\n      clearTimeout(debounceTimeout);\n    }\n\n    debounceTimeout = setTimeout(() => {\n      fn.apply(null, args);\n    }, ms);\n  }\n}"]}